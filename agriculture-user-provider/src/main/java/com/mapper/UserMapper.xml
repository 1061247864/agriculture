<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.UserMapper">
	<resultMap id="BaseResultMap" type="com.pojo.User">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="user_code" jdbcType="VARCHAR"
			property="userCode" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="createDate" jdbcType="TIMESTAMP"
			property="createdate" />
		<result column="last_Login" jdbcType="TIMESTAMP"
			property="lastLogin" />
		<result column="user_name" jdbcType="VARCHAR"
			property="userName" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="vip_id" jdbcType="INTEGER" property="vipId" />
		<result column="image" jdbcType="VARCHAR" property="image" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="address" jdbcType="VARCHAR" property="address" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value"
										item="listItem" open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		user_id, user_code, password, email, phone, age, sex,
		createDate, last_Login,
		user_name,
		status, vip_id, image, salt,address
	</sql>

	<select id="selectByPrimaryKey"
		parameterType="java.lang.Integer" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from user
		where user_id =
		#{userId,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.pojo.User">
		insert into user (user_id,
		user_code, password,
		email, phone, age,
		sex, createDate, last_Login,
		user_name, status, vip_id,
		image, salt)
		values
		(#{userId,jdbcType=INTEGER}, #{userCode,jdbcType=VARCHAR},
		#{password,jdbcType=VARCHAR},
		#{email,jdbcType=VARCHAR},
		#{phone,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER},
		#{sex,jdbcType=INTEGER}, #{createdate,jdbcType=TIMESTAMP},
		#{lastLogin,jdbcType=TIMESTAMP},
		#{userName,jdbcType=VARCHAR},
		#{status,jdbcType=INTEGER}, #{vipId,jdbcType=INTEGER},
		#{image,jdbcType=VARCHAR}, #{salt,jdbcType=VARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.pojo.User">
		insert into user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userCode != null">
				user_code,
			</if>
			<if test="password != null">
				password,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="phone != null">
				phone,
			</if>
			<if test="age != null">
				age,
			</if>
			<if test="sex != null">
				sex,
			</if>
		
				createDate,
		
			<if test="lastLogin != null">
				last_Login,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="status != null">
				status,
			</if>
			<if test="vipId != null">
				vip_id,
			</if>
			<if test="image != null">
				image,
			</if>
			<if test="salt != null">
				salt,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userCode != null">
				#{userCode,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				#{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				#{phone,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				#{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				#{sex,jdbcType=INTEGER},
			</if>
				NOW(),
			<if test="lastLogin != null">
				#{lastLogin,jdbcType=TIMESTAMP},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				#{status,jdbcType=INTEGER},
			</if>
			<if test="vipId != null">
				#{vipId,jdbcType=INTEGER},
			</if>
			<if test="image != null">
				#{image,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				#{salt,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>

	<update id="updateByExampleSelective" parameterType="map">
		update user
		<set>
			<if test="record.userId != null">
				user_id = #{record.userId,jdbcType=INTEGER},
			</if>
			<if test="record.userCode != null">
				user_code = #{record.userCode,jdbcType=VARCHAR},
			</if>
			<if test="record.password != null">
				password = #{record.password,jdbcType=VARCHAR},
			</if>
			<if test="record.email != null">
				email = #{record.email,jdbcType=VARCHAR},
			</if>
			<if test="record.phone != null">
				phone = #{record.phone,jdbcType=VARCHAR},
			</if>
			<if test="record.age != null">
				age = #{record.age,jdbcType=INTEGER},
			</if>
			<if test="record.sex != null">
				sex = #{record.sex,jdbcType=INTEGER},
			</if>
			<if test="record.createdate != null">
				createDate = #{record.createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="record.lastLogin != null">
				last_Login = #{record.lastLogin,jdbcType=TIMESTAMP},
			</if>
			<if test="record.userName != null">
				user_name = #{record.userName,jdbcType=VARCHAR},
			</if>
			<if test="record.status != null">
				status = #{record.status,jdbcType=INTEGER},
			</if>
			<if test="record.vipId != null">
				vip_id = #{record.vipId,jdbcType=INTEGER},
			</if>
			<if test="record.image != null">
				image = #{record.image,jdbcType=VARCHAR},
			</if>
			<if test="record.salt != null">
				salt = #{record.salt,jdbcType=VARCHAR},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update user
		set user_id = #{record.userId,jdbcType=INTEGER},
		user_code =
		#{record.userCode,jdbcType=VARCHAR},
		password =
		#{record.password,jdbcType=VARCHAR},
		email =
		#{record.email,jdbcType=VARCHAR},
		phone =
		#{record.phone,jdbcType=VARCHAR},
		age = #{record.age,jdbcType=INTEGER},
		sex = #{record.sex,jdbcType=INTEGER},
		createDate =
		#{record.createdate,jdbcType=TIMESTAMP},
		last_Login =
		#{record.lastLogin,jdbcType=TIMESTAMP},
		user_name =
		#{record.userName,jdbcType=VARCHAR},
		status =
		#{record.status,jdbcType=INTEGER},
		vip_id =
		#{record.vipId,jdbcType=INTEGER},
		image =
		#{record.image,jdbcType=VARCHAR},
		salt =
		#{record.salt,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.pojo.User">
		update user
		<set>
			<if test="userCode != null">
				user_code = #{userCode,jdbcType=VARCHAR},
			</if>
			<if test="password != null">
				password = #{password,jdbcType=VARCHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
			<if test="age != null">
				age = #{age,jdbcType=INTEGER},
			</if>
			<if test="sex != null">
				sex = #{sex,jdbcType=INTEGER},
			</if>
			<if test="createdate != null">
				createDate = #{createdate,jdbcType=TIMESTAMP},
			</if>
			<if test="lastLogin != null">
				last_Login = #{lastLogin,jdbcType=TIMESTAMP},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="status != null">
				status = #{status,jdbcType=INTEGER},
			</if>
			<if test="vipId != null">
				vip_id = #{vipId,jdbcType=INTEGER},
			</if>
			<if test="image != null">
				image = #{image,jdbcType=VARCHAR},
			</if>
			<if test="salt != null">
				salt = #{salt,jdbcType=VARCHAR},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.pojo.User">
		update user
		set
		user_code = #{userCode,jdbcType=VARCHAR},
		password =
		#{password,jdbcType=VARCHAR},
		email = #{email,jdbcType=VARCHAR},
		phone =
		#{phone,jdbcType=VARCHAR},
		age = #{age,jdbcType=INTEGER},
		sex =
		#{sex,jdbcType=INTEGER},
		createDate = #{createdate,jdbcType=TIMESTAMP},
		last_Login = #{lastLogin,jdbcType=TIMESTAMP},
		user_name =
		#{userName,jdbcType=VARCHAR},
		status = #{status,jdbcType=INTEGER},
		vip_id = #{vipId,jdbcType=INTEGER},
		image = #{image,jdbcType=VARCHAR},
		salt = #{salt,jdbcType=VARCHAR}
		where user_id =
		#{userId,jdbcType=INTEGER}
	</update>
	<!-- 11111111111111111111111111111111111111111111111111111111111111111111111111111111111111 -->
	<sql id="loginList">
		u.user_id, user_code, password, email, phone, age, sex,
		createDate, last_Login,address,
		user_name,
		status, vip_id, image,salt
		, p.per_id,
		per_name, pre_menu_name, pre_menu_url, create_Date,
		r.role_id,
		role_name
	</sql>


	<resultMap id="LoginBaseResultMap" type="com.pojo.User">
		<id column="user_id" jdbcType="INTEGER" property="userId" />
		<result column="user_code" jdbcType="VARCHAR"
			property="userCode" />
		<result column="password" jdbcType="VARCHAR"
			property="password" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="phone" jdbcType="VARCHAR" property="phone" />
		<result column="age" jdbcType="INTEGER" property="age" />
		<result column="sex" jdbcType="INTEGER" property="sex" />
		<result column="createDate" jdbcType="TIMESTAMP"
			property="createdate" />
		<result column="last_Login" jdbcType="TIMESTAMP"
			property="lastLogin" />
		<result column="user_name" jdbcType="VARCHAR"
			property="userName" />
		<result column="status" jdbcType="INTEGER" property="status" />
		<result column="vip_id" jdbcType="INTEGER" property="vipId" />
		<result column="image" jdbcType="VARCHAR" property="image" />
		<result column="salt" jdbcType="VARCHAR" property="salt" />
		<result column="address" jdbcType="VARCHAR" property="address" />

		<collection property="permissions"
			resultMap="BasePermissionMap"></collection>
		<collection property="roles" resultMap="BaseRolenMap"></collection>
	</resultMap>
	<resultMap id="BasePermissionMap" type="com.pojo.Permission">
		<id column="per_id" jdbcType="INTEGER" property="perId" />
		<result column="per_name" jdbcType="VARCHAR" property="perName" />
		<result column="pre_menu_name" jdbcType="VARCHAR"
			property="preMenuName" />
		<result column="pre_menu_url" jdbcType="VARCHAR"
			property="preMenuUrl" />
		<result column="create_Date" jdbcType="TIMESTAMP"
			property="createDate" />

	</resultMap>
	<resultMap id="BaseRolenMap" type="com.pojo.Role">
		<id column="role_id" jdbcType="INTEGER" property="roleId" />
		<result column="role_name" jdbcType="VARCHAR"
			property="roleName" />
	</resultMap>
	<select id="findAll" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from user
		<where>
			<if test="type==0">
				and user_id IN (SELECT user_id FROM user_role ur WHERE
				ur.role_id=1 )
			</if>
			<if test="type==1">
				and user_id NOT IN (SELECT user_id FROM user_role)
			</if>

			<if test="user != null">
				<if test="user.userName != null and user.userName != ''">
					and user_name = #{user.userName}
				</if>
				<if test="user.userCode != null and user.userCode != ''">
					and user_code = #{user.userCode}
				</if>
			</if>
		</where>
	</select>
	<select id="findUserByCode" resultMap="LoginBaseResultMap">
		SELECT
		<include refid="loginList" />
		FROM USER u
		LEFT JOIN user_role ur ON ur.user_id=u.user_id
		LEFT JOIN
		role r ON r.role_id=ur.role_id
		LEFT JOIN role_per rp ON
		rp.role_id=r.role_id
		LEFT JOIN permission p ON p.per_id=rp.per_id
		WHERE
		u.user_code=#{userCode}
	</select>
	<select id="findUserAddressCount" resultType="userAddressCount">
		SELECT
		address,COUNT(1) as count
		FROM USER
		WHERE user_id NOT IN
		( SELECT user_id FROM
		user_role)
		GROUP BY address
	</select>
	<!-- 获得当天注册的用户 -->
	<select id="gerCurrentRegistryUser">
	SELECT COUNT(1) FROM USER WHERE createDate = DATE_FORMAT(NOW(),"%y-%m-%d")
	</select>
</mapper>