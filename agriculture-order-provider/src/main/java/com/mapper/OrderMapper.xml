<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.OrderMapper">
  <resultMap id="BaseResultMap" type="com.pojo.Order">
    <id column="oid" jdbcType="INTEGER" property="orderId" />
    <result column="ouid" jdbcType="INTEGER" property="userId" />
    <result column="count_Price" jdbcType="DOUBLE" property="countPrice" />
    <result column="createDate" jdbcType="TIMESTAMP" property="createdate" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <association property="user" javaType="user">
    <id column="uid" jdbcType="INTEGER" property="userId" />
    <result column="user_code" jdbcType="VARCHAR" property="userCode" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="image" jdbcType="VARCHAR" property="image" />
    </association>
    <collection property="orderItemList" ofType="orderItem">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="oioid" jdbcType="INTEGER" property="orderId" />
    <result column="ogid" jdbcType="INTEGER" property="goodId" />
    <result column="count_Price" jdbcType="DOUBLE" property="countPrice" />
    <result column="good_number" jdbcType="INTEGER" property="goodNumber" />
    <association property="goods" javaType="goods">
    <id column="gid" jdbcType="INTEGER" property="goodId" />
		<result column="good_name" jdbcType="VARCHAR"
	property="goodName" />
	<result column="status" jdbcType="INTEGER" property="status" />
	<result column="price" jdbcType="DOUBLE" property="price" />
	<result column="company" jdbcType="VARCHAR" property="company" />
	<result column="context" jdbcType="VARCHAR" property="context" />
	<result column="sum" jdbcType="INTEGER" property="sum" />
	<result column="sum_back" jdbcType="INTEGER" property="sumBack" />
	<result column="shop_id" jdbcType="INTEGER" property="shopId" />
	<result column="categoryLevel1Id" jdbcType="INTEGER"
		property="categorylevel1id" />
	<result column="categoryLevel2Id" jdbcType="INTEGER"
		property="categorylevel2id" />
	<result column="categoryLevel3Id" jdbcType="INTEGER"
		property="categorylevel3id" />
	<result column="photo" jdbcType="VARCHAR" property="photo" />
    </association>
    </collection>
  </resultMap>
  <!-- <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql> -->
  <!-- <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql> -->
  <sql id="Base_Column_List">
    order_id, user_id, count_Price, createDate, status
  </sql>
  <!-- <select id="selectByExample" parameterType="com.pojo.OrderExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select> -->
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
	SELECT
	o.`order_id` oid,o.`count_Price`,o.`createDate`,o.`status`,o.`user_id` ouid,o.`address`,
	u.`user_id`
	uid,u.`user_code`,u.`email`,u.`phone`,u.`age`,u.`sex`,u.`user_name`,u.`image`,
	oi.`id`,oi.`order_id` oioid,oi.`good_id`
	ogid,oi.`count_Price`,oi.`good_number`,
	g.`good_id`
	gid,g.`good_name`,g.`status`,g.`price`,g.`company`,g.`context`,g.`sum`,g.`sum_back`,g.`shop_id`,g.`categoryLevel1Id`,g.`categoryLevel2Id`,g.`categoryLevel3Id`,g.`photo`
	FROM `order` o,`user` u,`order_item` oi,`goods` g
	WHERE o.`user_id`=u.`user_id`
	AND o.`order_id`=oi.`order_id`
	AND oi.`good_id`=g.`good_id`
	AND o.`order_id`=#{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from `order`
    where order_id = #{orderId}
  </delete>
  <!-- <delete id="deleteByExample" parameterType="com.pojo.OrderExample">
    delete from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete> -->
  <insert id="insert" parameterType="com.pojo.Order">
    insert into order (order_id, user_id, count_Price, 
      createDate, status)
    values (#{orderId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{countPrice,jdbcType=VARCHAR}, 
      #{createdate,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.pojo.Order">
  <selectKey keyProperty="orderId" resultType="java.lang.Integer" order="AFTER">
  SELECT LAST_INSERT_Id();
  </selectKey>
    insert into `order`
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        order_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="countPrice != null">
        count_Price,
      </if>
      <if test="1==1">
        createDate,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="address != null">
        address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="orderId != null">
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="countPrice != null">
        #{countPrice},
      </if>
      <if test="1==1">
        NOW(),
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="address != null">
        #{address,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!-- <select id="countByExample" parameterType="com.pojo.OrderExample" resultType="java.lang.Long">
    select count(*) from order
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select> -->
  <!-- <update id="updateByExampleSelective" parameterType="map">
    update order
    <set>
      <if test="record.orderId != null">
        order_id = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.countPrice != null">
        count_Price = #{record.countPrice,jdbcType=VARCHAR},
      </if>
      <if test="record.createdate != null">
        createDate = #{record.createdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update> -->
  <!-- <update id="updateByExample" parameterType="map">
    update order
    set order_id = #{record.orderId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      count_Price = #{record.countPrice,jdbcType=VARCHAR},
      createDate = #{record.createdate,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update> -->
  <update id="updateByPrimaryKeySelective" parameterType="com.pojo.Order">
    update `order`
    <set>
      <if test="userId != null">
        user_id = #{userId},
      </if>
      <if test="countPrice != null">
        count_Price = #{countPrice},
      </if>
      <if test="createdate != null">
        createDate = NOW(),
      </if>
      <if test="status != null">
        `status` = #{status},
      </if>
      <if test="address != null">
        `address` = #{address},
      </if>
    </set>
    where order_id = #{orderId}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.pojo.Order">
    update order
    set user_id = #{userId,jdbcType=INTEGER},
      count_Price = #{countPrice,jdbcType=VARCHAR},
      createDate = #{createdate,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER}
    where order_id = #{orderId,jdbcType=INTEGER}
  </update>
  
  
  
  <!-- getOrderList  获取订单 -->
  <select id="getOrderList" parameterType="order" resultMap="BaseResultMap">
    select
    o.`order_id` oid,o.`count_Price`,o.`createDate`,o.`status`,o.`user_id` ouid,o.address
	u.`user_id` uid,u.`user_code`,u.`email`,u.`phone`,u.`age`,u.`sex`,u.`user_name`,u.`image`
    from `order` o,`user` u
    WHERE o.`user_id`=u.`user_id`
	<!-- SELECT
	o.`order_id` oid,o.`count_Price`,o.`createDate`,o.`status`,o.`user_id` ouid,
	u.`user_id`
	uid,u.`user_code`,u.`email`,u.`phone`,u.`age`,u.`sex`,u.`user_name`,u.`image`,
	oi.`id`,oi.`order_id` oioid,oi.`good_id`
	ogid,oi.`count_Price`,oi.`good_number`,
	g.`good_id`
	gid,g.`good_name`,g.`status`,g.`price`,g.`company`,g.`context`,g.`sum`,g.`sum_back`,g.`shop_id`,g.`categoryLevel1Id`,g.`categoryLevel2Id`,g.`categoryLevel3Id`,g.`photo`
	FROM `order` o,`user` u,`order_item` oi,`goods` g
	WHERE o.`user_id`=u.`user_id`
	AND o.`order_id`=oi.`order_id`
	AND oi.`good_id`=g.`good_id` -->
    <if test="order.orderId != null and order.orderId != 0 ">
    and o.`order_id` = #{order.orderId}
    </if>
    <if test="order.userId != null and order.userId != 0 ">
    and o.`user_id` = #{order.userId}
    </if>
    <if test="order.countPrice != null and order.countPrice != '' ">
    and o.`count_Price` = #{order.countPrice}
    </if>
    <if test="order.createdate != null and order.createdate != '' ">
    and o.`createDate` = #{order.createdate}
    </if>
    <if test="order.status != null and order.status != -1 ">
    and o.`status` = #{order.status}
    </if>
  </select>
  <update id="updatesorder" >
    update `order` set status = #{idvalue} where order_id = #{id}
  </update>
  
  
  
  
</mapper>